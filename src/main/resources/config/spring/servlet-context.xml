<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:context="http://www.springframework.org/schema/context"
			 xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/myfiles/**" location="file:/Users/soyeonlee/Dev/test-folder/upload/" />
	<!-- 만약 브라우저에서 'localhost/myfiles/파일이름' 치면 e드라이브 uploads에서 해당 파일 찾아서 띄움 -->
	<!--                   웹경로                                       물리적경로(컴퓨터상) -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 이걸 등록해야 실제 파일업로드를 사용할 수 있다 -->
	<beans:bean id="multipartResolver"  class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>

	<!-- root-context에 import하면 다른 컴포넌트 autowired 할 때 순서가 꼬일 수 있음으로 여기에 설정하는 것이 좋음 -->
	<beans:import resource="websocket-context.xml"/>

	<context:component-scan base-package="com.sy.soyeon" />



</beans:beans>
